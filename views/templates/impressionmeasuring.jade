extends ../layout
block body
  include ../navbar
  .container
    br
    #jobDetails.panel.panel-default
      .panel-body
        
        if job        
          h1=job.name
          p.lead=job.desc
          #jobid.hide=job.id


        if tasks
          each task in tasks
            .col-sm-2.hide
              .thumbnail.featureImage
                img(src="#{task.src}", data-id="#{task.id}", minVal="#{task.min}", maxVal="#{task.max}")

        .row
          .col-sm-8
            #currentImageContainer
              #currentImage
                img.thumbnail
          .col-sm-4
            .col-sm-12
              p#minLabel
            .col-sm-12
              p#maxLabel
            .col-sm-12
              a.btn.btn-lg.btn-success.btn-flat.btn-superbig.btn-block.selectButton Submit
            .col-sm-12
              a.btn.btn-lg.btn-danger.btn-flat.btn-superbig.btn-block.selectButton No Comment
            .col-sm-12
              a.btn.btn-lg.btn-default.btn-flat.btn-superbig.btn-block.selectButton Skip
        hr
        .row
          .col-sm-12
            .bgLightDark
              #job

  script.

    /**
     * Puts a clicked image into the #currentImage div
     * and links the src and the data-id.
     * @return null
     */

    function toCanvas(){
      var src = $(this).find('img').attr('src')
      var id  = $(this).attr('data-id')
      var minval = $(this).find('img').attr('minval')
      var maxval = $(this).find('img').attr('maxval')
      $("#currentImage img").attr('src',src)
      $("#currentImage img").attr('data-id',id)
      $("#minLabel").text(minval)
      $("#maxLabel").text(maxval)
    }

    /**
     * Processes the option as selected by the user
     * and parses, normalizes, then submits the change
     * to the model.
     * @return null
     */

    function select(){

      var src = $("#currentImage").find('img').attr('src')
      var task_id  = $("#currentImage").find('img').attr('data-id')
      var job_id  = $("#jobid").text()
      var val = $(this).text()
      //- var minval = $(this).find('img').attr('minVal')
      //- var maxval = $(this).find('img').attr('maxVal')

      io.socket.post("/actions/new_do", {task_id:task_id, job_id:job_id, input:val, type:"impressionmeasuring"}, function(new_task,info){

        console.log(new_task)
        console.log(info)

        $("#currentImage img").attr('src',new_task.src)
        $("#currentImage img").attr('data-id',new_task.id)
        $("#minLabel").text(new_task.min)
        $("#maxLabel").text(new_task.max)
        
      })

    }

    /**
     * Listens for .selectButton class to be clicked
     * and binds the event to the select() function
     * @param  {String}   action    The action listener
     * @param  {String}   selecter  The DOM id to listen to
     * @param  {Function} callback  The function to execute
     * @return null
     */
    

    //want this to go back to browse page?
    //$(document).on("click", ".backButton",)


    $(document).on( "click", ".featureImage", toCanvas )


    $(document).on( "click", ".selectButton", select )


    //- $(document).on( "click", ".startButton", function(){ 
    //-   $(".featureImage").first().click(); 
    //-   $("#jobDetails").hide() 
    //-   $("#hiddenAtFirst").show() 
    //- })

    /**
     * Instantiates a model event domain 
     */

    var featureModel = new $.eventModel();

    /**
     * Listens for model instance creation and binds  events
     * to the DOM with respect to their model and structure.
     * @param  {Object} info        Event information from emit
     * @param  {Object} item    The thing that happened.
     * @return null
     */

    featureModel.on('created', function(info,item) {
      var a = item.data.tasks
      $.map(a, function(d){
        console.log("asdasdasdasad")
        console.log(d)
        $("#job").append($("<span>", {
          "data-id":d.id,
          class:"small featureImage"
        }).append($("<img>",{
          src:d.src,
          minval: d.min,
          maxval: d.max
        })))
      })

    });

    /**
     * Listens for model updates and binds model events
     * to the DOM with respect to their model and structure.
     * @param  {Object} info     Event information from emit
     * @param  {Object} activity The thing that happened.
     * @return null
     */
    
    featureModel.on('updated', function(info,item) {
      $.map(item.data, function(val, attr){
        if($("#"+item.id+" #"+attr).text())
          $("#"+item.id+" #"+attr).text(val)
        else $("#"+item.id).append($("<div>",{id:attr,text:val}))
      })
    });

    /**
     * Glues the model events to their respective DOM
     * elements and gets a specified number of items
     * with which to first populate the content.
     * @param  {String} model The name of the model
     * @return null
     */
    
    function dataset_glue(model){
      console.log("thereeess")
      io.socket.on( model, function(dataset){
        featureModel.emit(dataset.verb, dataset);
      })

      io.socket.get( "/"+model+"/find", {type:"impressionmeasuring"}, function(datasets){
        console.log(datasets);
        $.map(datasets, function(dataset){
          featureModel.emit('created', {
            id:dataset.id,
            data:dataset
          })
        })
      })
      $(".featureImage").first().click();
    }



    // When document is ready, grab latest things.
    $(document).ready(function(){

      dataset_glue("job");


    });












//- extends ../layout
//- block body 
//-   include ../navbar
//-   .container
//-     .row
//-       .col-md-3
//-         .panel.panel-primary
//-           .panel-heading
//-             h3.panel-title
//-               span.glyphicon.glyphicon-arrow-right
//-               | How is My Site?
//-               a(href='http://www.jquery2dotnet.com', target='_blank')
//-                 span.glyphicon.glyphicon-new-window
//-           .panel-body
//-             ul.list-group
//-               li.list-group-item
//-                 .radio
//-                   label
//-                     input(type='radio', name='optionsRadios')
//-                     | Good
//-               li.list-group-item
//-                 .radio
//-                   label
//-                     input(type='radio', name='optionsRadios')
//-                     | Excellent
//-               li.list-group-item
//-                 .radio
//-                   label
//-                     input(type='radio', name='optionsRadios')
//-                     | Bed
//-               li.list-group-item
//-                 .radio
//-                   label
//-                     input(type='radio', name='optionsRadios')
//-                     | Can Be Improved
//-               li.list-group-item
//-                 .radio
//-                   label
//-                     input(type='radio', name='optionsRadios')
//-                     | No Comment
//-           .panel-footer
//-             button.btn.btn-primary.btn-sm(type='button')
//-               | Vote
//-             a(href='#') View Result
//-       .col-md-3
//-         .panel.panel-primary
//-           .panel-heading
//-             h3.panel-title
//-               span.glyphicon.glyphicon-hand-right
//-               | Where do you get your news?
//-           .panel-body
//-             ul.list-group
//-               li.list-group-item
//-                 .checkbox
//-                   label
//-                     input(type='checkbox', value='')
//-                     | Internet
//-               li.list-group-item
//-                 .checkbox
//-                   label
//-                     input(type='checkbox', value='')
//-                     | Television
//-               li.list-group-item
//-                 .checkbox
//-                   label
//-                     input(type='checkbox', value='')
//-                     | Radio
//-               li.list-group-item
//-                 .checkbox
//-                   label
//-                     input(type='checkbox', value='')
//-                     | Newspaper
//-               li.list-group-item
//-                 .checkbox
//-                   label
//-                     input(type='checkbox', value='')
//-                     | Others
//-           .panel-footer.text-center
//-             button.btn.btn-primary.btn-block.btn-sm(type='button')
//-               | Vote
//-             a.small(href='#') View Result
//-       .col-md-6
//-         .panel.panel-primary
//-           .panel-heading
//-             h3.panel-title
//-               span.glyphicon.glyphicon-circle-arrow-right
//-               | Where do you get your news?
//-           .panel-body.two-col
//-             .row
//-               .col-md-6
//-                 .well.well-sm
//-                   .checkbox
//-                     label
//-                       input(type='checkbox', value='')
//-                       | Internet
//-               .col-md-6
//-                 .well.well-sm
//-                   .checkbox
//-                     label
//-                       input(type='checkbox', value='')
//-                       | Television
//-             .row
//-               .col-md-6
//-                 .well.well-sm.margin-bottom-none
//-                   .checkbox
//-                     label
//-                       input(type='checkbox', value='')
//-                       | Radio
//-               .col-md-6
//-                 .well.well-sm.margin-bottom-none
//-                   .checkbox
//-                     label
//-                       input(type='checkbox', value='')
//-                       | Newspaper
//-           .panel-footer
//-             button.btn.btn-success.btn-sm(type='button')
//-               span.glyphicon.glyphicon-ok
//-               | Vote
//-             button.btn.btn-primary.btn-sm(type='button')
//-               | View Result
