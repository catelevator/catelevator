.bg11
 
    br 
    .templateDescription.text-muted Interact with this template by circling the difference between the two photos.
    hr

    #yesnoChange
      .container.text.center
        .text-center
          h4 While signed in, users would be given the next item in the dataset
          h5 Please continue to explore other templates
      hr
    #skipChange
      .container.text.center  
        .text-center
          h4 Users can sign up to continue tagging data
          h5 Click on another tab to explore other templates
      hr

    #firstChange
      .container
        .col-sm-3
          canvas(id='mycanvas1', width="275", height="300", style="border:1px solid #000000;")
        .col-sm-3
          canvas(id='mycanvas2', width="275", height="300", style="border:1px solid #000000;")
          
        .col-sm-6
          br
          .text-muted
            o Points:
            b  100 
            o  |  
            o Congruence:
            b  100

          h2 Circle the difference in the photos
          br
          br
          .row
            .col-sm-3
              a.btn.btn-lg.btn-success.btn-superbig.btn-block.yesnobtnChange Found it!
            .col-sm-3
              a.btn.btn-lg.button-royal.btn-superbig.btn-block.clearbtnChange Clear
            .col-sm-3
              a.btn.btn-lg.btn-danger.btn-superbig.btn-block.yesnobtnChange Can't Find
            .col-sm-3
              a.btn.col-sm-4.btn-lg.btn-link.btn-superbig.btn-block.skipbtnChange  Skip 
                fa.fa.fa-caret-right
          br
          br

          
script.
  $('#yesnoChange').hide();
  $('#skipChange').hide();
  var canvas1 = document.getElementById("mycanvas1");
  var cxt1 = canvas1.getContext("2d");
  var cat1 = new Image();
  cat1.src = "images/originalMADS.jpg";

  var canvas2 = document.getElementById("mycanvas2");
  var cxt2 = canvas2.getContext("2d");
  var cat2 = new Image();
  cat2.src = "images/changed.jpg";

  var isDrawing1 = false;
  var isDrawing2 = false;

  cat1.onload = function() {
    cxt1.drawImage(cat1,0,0, 275, 300);
  }

  cat2.onload = function() {
    cxt2.drawImage(cat2,0,0, 275, 300);
  }

  var startX;
  var startY;
  //var startX2;
  //var startY2;

  canvas1.onmousedown = function(e) {
    e.preventDefault();
    e.stopPropagation();
    var rect1 = canvas1.getBoundingClientRect();
    var offsetX = rect1.left;
    var offsetY = rect1.top;
    //cxt1.beginPath();
    //cxt2.beginPath();
    startX = parseInt(e.clientX - offsetX);
    startY = parseInt(e.clientY - offsetY);
    isDrawing1 = true;
    isDrawing2 = true;
    //cxt1.moveTo(e.clientX - rect1.left, e.clientY - rect1.top);
    //cxt2.moveTo(e.clientX - rect1.left, e.clientY - rect1.top);
  };
  canvas1.onmousemove = function(e) {
    var rect1 = canvas1.getBoundingClientRect();
    if (isDrawing1 && isDrawing2) {
      var offsetX = rect1.left;
      var offsetY = rect1.top;
      var x = parseInt(e.clientX - offsetX);
      var y = parseInt(e.clientY - offsetY);
      var moveY = startY + (y - startY) / 2;
      cxt1.clearRect(0,0,canvas1.width, canvas1.height);
      cxt1.drawImage(cat1,0,0,275,300);
      cxt1.lineWidth = 2;
      cxt2.clearRect(0,0,canvas2.width, canvas2.height);
      cxt2.drawImage(cat2,0,0,275,300);
      cxt2.lineWidth = 2;

      cxt1.beginPath();
      cxt2.beginPath();

      cxt1.moveTo(startX, moveY);
      cxt1.bezierCurveTo(startX, startY, x, startY, x, moveY);
      cxt1.bezierCurveTo(x, y, startX, y, startX, moveY);

      cxt2.moveTo(startX, moveY);
      cxt2.bezierCurveTo(startX, startY, x, startY, x, moveY);
      cxt2.bezierCurveTo(x, y, startX, y, startX, moveY);

      cxt1.closePath();
      cxt2.closePath();

      cxt1.stroke();
      cxt2.stroke();
    }
  };
  canvas1.onmouseup = function() {
    isDrawing1 = false;
    isDrawing2 = false;
  };

  canvas2.onmousedown = function(e) {
    e.preventDefault();
    e.stopPropagation();
    var rect2 = canvas2.getBoundingClientRect();
    var offsetX = rect2.left;
    var offsetY = rect2.top;
    //cxt1.beginPath();
    //cxt2.beginPath();
    startX = parseInt(e.clientX - offsetX);
    startY = parseInt(e.clientY - offsetY);

    isDrawing1 = true;
    isDrawing2 = true;
    //cxt1.moveTo(e.clientX - rect2.left, e.clientY - rect2.top);
    //cxt2.moveTo(e.clientX - rect2.left, e.clientY - rect2.top);
  };
  canvas2.onmousemove = function(e) {
    var rect2 = canvas2.getBoundingClientRect();
    if (isDrawing1 && isDrawing2) {
      var offsetX = rect2.left;
      var offsetY = rect2.top;
      var x = parseInt(e.clientX - offsetX);
      var y = parseInt(e.clientY - offsetY);
      var moveY = startY + (y - startY) / 2;
      cxt1.clearRect(0,0,canvas1.width, canvas1.height);
      cxt1.drawImage(cat1,0,0,275,300);
      cxt1.lineWidth = 2;
      cxt2.clearRect(0,0,canvas2.width, canvas2.height);
      cxt2.drawImage(cat2,0,0,275,300);
      cxt2.lineWidth = 2;

      cxt1.beginPath();
      cxt2.beginPath();

      cxt1.moveTo(startX, moveY);
      cxt1.bezierCurveTo(startX, startY, x, startY, x, moveY);
      cxt1.bezierCurveTo(x, y, startX, y, startX, moveY);

      cxt2.moveTo(startX, moveY);
      cxt2.bezierCurveTo(startX, startY, x, startY, x, moveY);
      cxt2.bezierCurveTo(x, y, startX, y, startX, moveY);

      cxt1.closePath();
      cxt2.closePath();

      cxt1.stroke();
      cxt2.stroke();
    }
  };
  canvas2.onmouseup = function() {
    isDrawing1 = false;
    isDrawing2 = false;
  };
      
  $(document).on("click", ".clearbtnChange", function() {
    cxt1.clearRect(0,0,canvas1.width, canvas1.height);
    cxt1.drawImage(cat1, 0,0,275,300);
    cxt2.clearRect(0,0,canvas2.width, canvas2.height);
    cxt2.drawImage(cat2, 0,0,275,300);
  });

  $(document).on("click", ".yesnobtnChange", function() {
    $('#skipChange').hide();
    $('#yesnoChange').show();

  });

  $(document).on("click", ".skipbtnChange", function() {
    $('#yesnoChange').hide();
    $('#skipChange').show();

  });

  $(document).ready(function() {
    $('#yesnoChange').hide();
    $('#skipChange').hide();
  });