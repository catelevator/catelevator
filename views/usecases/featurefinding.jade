//extends ../layout
.bg11
    
    br 
    .templateDescription.text-muted Interact with this template by circling the feature.
    hr

   #yesnoFind
      .container.text.center
        .text-center
          h4 While signed in, users would be given the next item in the dataset
          h5 Please continue to explore other templates
      hr
    #skipFind
      .container.text.center  
        .text-center
          h4 Users can sign up to continue tagging data
          h5 Click on another tab to explore other templates
      hr

    #firstFind
      .container
        .col-sm-6
          canvas(id='mycanvas', width="500", height="300", style="border:1px solid #000000;")
          
        .col-sm-6
          br
          .text-muted
            o Points:
            b  100 
            o  |  
            o Congruence:
            b  100

          h2 Can you circle the cat in this photo?
          br
          br
          .row
            .col-sm-3
              a.btn.btn-lg.btn-success.btn-superbig.btn-block.yesnobtnFind Found it!
            .col-sm-3
              a.btn.btn-lg.button-royal.btn-superbig.btn-block.clearbtn Clear
            .col-sm-3
              a.btn.btn-lg.btn-danger.btn-superbig.btn-block.yesnobtnFind Can't Find
            .col-sm-3
              a.btn.col-sm-4.btn-lg.btn-link.btn-superbig.btn-block.skipbtnFind  Skip 
                fa.fa.fa-caret-right

          
    br


script.
  $('#yesnoFind').hide();
  $('#skipFind').hide();
  var canvas = document.getElementById("mycanvas");
  var context = canvas.getContext("2d");
  var cat = new Image();
  cat.src = "http://i.imgur.com/qvJuqVV.jpg";
  var isDrawing;

  cat.onload = function() {
    context.drawImage(cat,0,0, 500, 300);
  };

  canvas.onmousedown = function(e) {
    var rect = canvas.getBoundingClientRect();
    context.beginPath();
    isDrawing = true;
    context.moveTo(e.clientX - rect.left, e.clientY - rect.top);
  };
  canvas.onmousemove = function(e) {
    var rect = canvas.getBoundingClientRect();
    if (isDrawing) {
      context.lineTo(e.clientX - rect.left, e.clientY - rect.top);
      context.stroke();
    }
  };
  canvas.onmouseup = function() {
    isDrawing = false;
  };
  
   //- function img_update() {
   //-      context.drawImage(cat, 0, 0);
   //-      context.clearRect(0, 0, canvas.width, canvas.height);
   //-  };

    // The circle tool.
    //- tools.circle = function () {
    //-     tool = this;
    //-     this.started = false;

    //- canvas.onmousedown = function (ev) {
    //-     /*var right = 2;

    //-     if (ev.button === right) {
    //-         context.clearRect(0, 0, canvas.width, canvas.height);
    //-         isDrawing = false;
    //-         img_update();
    //-         return;
    //-     }
    //-     else*/ if (isDrawing) {
    //-         canvas.onmousemove(ev);
    //-         var rect = canvas.getBoundingClientRect();
    //-         var startingAngle = 0;
    //-         var endingAngle = 2 * Math.PI; // 360 degrees is equal to 2Ï€ radians
    //-         var dx = Math.abs(ev.clientY - rect.top),
    //-           dy = Math.abs(ev.clientX - rect.left),
    //-           x = Math.min(ev.clientY, rect.top) + (dx / 2),
    //-           y = Math.min(ev.clientX, rect.left) + (dy / 2),
    //-           r = Math.round(Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2)));
    //-         var circumference = Math.max(dx, dy);
    //-         var scaleX = dx / circumference;
    //-         var scaleY = dy / circumference;
    //-         //- actionsLogger.addScript(
    //-         //-     "context.strokeStyle = '#" + $(".color").val() + "';\r\n" +
    //-         //-       "context.save();\r\n" +
    //-         //-       "context.translate(" + x + ", " + y + ");\r\n" +
    //-         //-       "context.scale(" + scaleX + ", " + scaleY + ");\r\n" +
    //-         //-       "context.beginPath();\r\n" +
    //-         //-       "context.arc(" + 0 + ", " + 0 + ", " + r + ", " + startingAngle + ", " + endingAngle + ", false);\r\n" +
    //-         //-       "context.stroke();\r\n" +
    //-         //-       "context.closePath();\r\n" +
    //-         //-       "context.restore();\r\n"
    //-         //-   );

    //-         isDrawing = false;
    //-         //img_update();
    //-     }
    //-     else {
    //-         isDrawing = true;
    //-         rect.top = ev.clientY;
    //-         rect.left = ev.clientX;
    //-     }
    //- };

    //- canvas.onmousemove = function (ev) {
    //-     if (!isDrawing) {
    //-         return;
    //-     }
    //-     var rect = canvas.getBoundingClientRect();
    //-     var dx = Math.abs(ev.clientY - rect.top),
    //-       dy = Math.abs(ev.clientX - rect.left),
    //-       x = Math.min(ev.clientY, rect.top) + Math.round(dx / 2),
    //-       y = Math.min(ev.clientX, rect.left) + Math.round(dy / 2),
    //-       r = Math.round(Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2)));

    //-     //context.clearRect(0, 0, canvas.width, canvas.height);

    //-     var startingAngle = 0;
    //-     var endingAngle = 2 * Math.PI; // 360 degrees is equal to 2Ï€ radians

    //-     var circumference = Math.max(dx, dy);
    //-     var scaleX = dx / circumference;
    //-     var scaleY = dy / circumference;

    //-     if (!x || !y || !r || !circumference || !scaleX || !scaleY) {
    //-         return;
    //-     }

    //-     context.save();
    //-     context.translate(x, y);
    //-     context.scale(scaleX, scaleY);
    //-     context.beginPath();
    //-     context.arc(0, 0, r, startingAngle, endingAngle, false);
    //-     context.stroke();
    //-     context.closePath();
    //-     context.restore();
    //- };

    //- canvas.onmouseup = function (ev) {

    //- };
       

  $(document).on("click", ".clearbtn", function() {
    context.clearRect(0,0,canvas.width, canvas.height);
    context.drawImage(cat, 0,0,500,300);
  });

  $(document).on("click", ".yesnobtnFind", function() {
    //$('#firstFind').hide();
    $('#skipFind').hide();
    $('#yesnoFind').show();
  });

  $(document).on("click", ".skipbtnFind", function() {
    $('#yesnoFind').hide();
    $('#skipFind').show();
  });

  $(document).ready(function() {
    $('#yesnoFind').hide();
    $('#skipFind').hide();
  });